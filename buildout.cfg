[buildout]
# extensions = buildout.dumppickedversions
# dump-picked-versions-file = versions.cfg
extends = versions.cfg
parts =
      console-scripts
      test
      pep8-bin
      pep8
      pylint-bin
      pylint
      ipython
      sphinxbuilder
develop =
        .
eggs =
     slimit
# allow-picked-versions = false
include-site-packages = false
exec-sitecustomize = false
versions = versions

[console-scripts]
recipe = z3c.recipe.scripts
eggs =
     zope.testrunner
     createcoverage
     ${buildout:eggs}
interpreter=python

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs-source
build = ${buildout:directory}/docs

[ipython]
recipe = z3c.recipe.scripts
eggs =
     ${buildout:eggs}
     ipython
scripts=ipython

[var]
recipe = plone.recipe.command
directory = ${buildout:directory}/var
command = mkdir ${:directory}

[test]
recipe = zc.recipe.testrunner
eggs = slimit [test]
extra-paths = ${buildout:directory}/parts/test/working-directory
defaults = ['--tests-pattern', '^f?tests$', '-v']


[pep8-bin]
recipe = z3c.recipe.scripts
eggs =
   pep8
entry-points = pep8-bin=pep8:_main

[pep8]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    find -L src -type f -regex ".*\.py" | xargs bin/pep8-bin

output = ${buildout:directory}/bin/pep8
mode = 755

# :F0401: Unable to import %r (%s). Pylint has been unable to import a module.
# :C0111: *Missing docstring*
# :C0103: *Invalid name "%s" (should match %s)*
# :W0142: *Used * or ** magic*
# :W0232: *Class has no __init__ method*
# :E1101: *%s %r has no %r member*
# :R0911: Too many return statements (%s/%s)
[pylint-bin]
recipe = z3c.recipe.scripts
eggs = pylint
entry-points = pylint-bin=pylint.lint:Run
arguments = [
    '--output-format=parseable',
    '--reports=y',
    '--include-ids=y',
    '--disable=F0401,C0111,C0103,W0142,W0232,E1101,R0911',
    '--generated-members=objects',
    '--min-public-methods=0',
    '--max-public-methods=30',
    ] + sys.argv[1:]

[pylint]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    find -L src -type f -regex ".*\.py" | xargs bin/pylint-bin $@
output = ${buildout:directory}/bin/pylint
mode = 755